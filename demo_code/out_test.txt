<BOF>
from swgpy.object import *
def create(kernel):
<INDENT>result=Static()
result.template='<STR_LIT>'
result.attribute_template_id=-<INT_LIST>
result.stfName('<STR_LIT>','<STR_LIT>')
return result <DEDENT> <EOF><BOF>
import pdb
import shutil
import os,sys
from numpy import arange
from Toolbox.CMORresources import CMORAttributes
class ESGFresources :
<INDENT> '<STR_LIT>'
def __init__(self,rcFile):
<INDENT> '<STR_LIT>'
f=open(rcFile,'<STR_LIT>')
lines=f.readlines()
f.close()
self.resources=dict([(key.strip(),value.strip(),)
for line in lines if line !='<STR_LIT>'and line [<INT_LIST>]!='<STR_LIT>'
for(key,value)in
[line.strip().replace('<STR_LIT>','<STR_LIT>').replace('<STR_LIT>','<STR_LIT>').rstrip().split('<STR_LIT>')]])
for key in self.resources.keys():
<INDENT>self.resources [key ]=self.resources [key ].replace('<STR_LIT>','<STR_LIT>')
<DEDENT>self.xcl=None
try :
<INDENT>self.xcl=self.resources ['<STR_LIT>']
rc=self.ReadXCL()
<DEDENT>except :
<INDENT>pass
<DEDENT> <DEDENT>def __getitem__(self,key):
<INDENT> '<STR_LIT>'
return self.resources [key ]
<DEDENT>def __setitem__(self,key,value):
<INDENT> '<STR_LIT>'
self.resources [key ]=value
<DEDENT>def __delete__(self,key):
<INDENT> '<STR_LIT>'
del self.resources [key ]
<DEDENT>def ReadXCL(self):
<INDENT> '<STR_LIT>'
try :
<INDENT>import xlrd
<DEDENT>except :
<INDENT>print '<STR_LIT>'
print '<STR_LIT>'
<DEDENT>if(os.path.isfile(self.xcl)):
<INDENT>wb=xlrd.open_workbook(self.xcl)
<DEDENT>else :
<INDENT>print '<STR_LIT>'+self.xcl +'<STR_LIT>'
print '<STR_LIT>'
raise NameError(self.xcl)
<DEDENT>sheet=wb.sheet_by_name('<STR_LIT>')
self.resources ['<STR_LIT>']=[sheet.row(i)[<INT_LIST>].value.encode('<STR_LIT>','<STR_LIT>')for i in arange(sheet.nrows -<INT_LIST>)+<INT_LIST>]
self.resources ['<STR_LIT>']=[sheet.row(i)[<INT_LIST>].value.encode('<STR_LIT>','<STR_LIT>')for i in arange(sheet.nrows -<INT_LIST>)+<INT_LIST>]
self.resources ['<STR_LIT>']=[sheet.row(i)[<INT_LIST>].value.encode('<STR_LIT>','<STR_LIT>')for i in arange(sheet.nrows -<INT_LIST>)+<INT_LIST>]
self.resources ['<STR_LIT>']=[sheet.row(i)[<INT_LIST>].value.encode('<STR_LIT>','<STR_LIT>')for i in arange(sheet.nrows -<INT_LIST>)+<INT_LIST>]
self.resources ['<STR_LIT>']=[sheet.row(i)[<INT_LIST>].value.encode('<STR_LIT>','<STR_LIT>')for i in arange(sheet.nrows -<INT_LIST>)+<INT_LIST>]
self.resources ['<STR_LIT>']=str(self.resources ['<STR_LIT>'])
self.resources ['<STR_LIT>']=str(self.resources ['<STR_LIT>'])
self.resources ['<STR_LIT>']=str(self.resources ['<STR_LIT>'])
self.resources ['<STR_LIT>']=str(self.resources ['<STR_LIT>'])
self.resources ['<STR_LIT>']=str(self.resources ['<STR_LIT>'])
return <INT_LIST>
<DEDENT> <DEDENT>def movefiles(rc):
<INDENT> '<STR_LIT>'
path=rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']
try :
<INDENT>rc ['<STR_LIT>']=='<STR_LIT>'
pass
<DEDENT>except :
<INDENT>path +='<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'
<DEDENT>try :
<INDENT>os.makedirs(path)
<DEDENT>except :
<INDENT>None
<DEDENT>cmorpath=rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'+rc ['<STR_LIT>']+'<STR_LIT>'
for r,d,f in os.walk(cmorpath):
<INDENT>for files in f :
<INDENT>if files.endswith('<STR_LIT>'):
<INDENT>filetimestamp=files.split('<STR_LIT>')[-<INT_LIST>].strip('<STR_LIT>')
file=os.path.join(r,files)
print file
Attr=CMORAttributes(file)
DelGlbAttributes=eval(rc ['<STR_LIT>'].replace('<STR_LIT>','<STR_LIT>'))
for attribute in DelGlbAttributes :
<INDENT>print '<STR_LIT>'%attribute
Attr.GlbDel(attribute)
<DEDENT>SetGlbAttributes=eval(rc ['<STR_LIT>'].replace('<STR_LIT>','<STR_LIT>'))
for(attribute,Value)in SetGlbAttributes :
<INDENT>print '<STR_LIT>'%(attribute,Value)
Attr.GlbSet(attribute,Value)
<DEDENT>Attr.close()
source='<STR_LIT>'
if(rc ['<STR_LIT>']=='<STR_LIT>'):
<INDENT>source=rc ['<STR_LIT>']+'<STR_LIT>'
<DEDENT>elif(rc ['<STR_LIT>']!='<STR_LIT>'):
<INDENT>source=rc ['<STR_LIT>'].split('<STR_LIT>')[<INT_LIST>]+'<STR_LIT>'